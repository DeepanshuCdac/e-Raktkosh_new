# QUERY 2....
query.SELECT_CAMP_DONOR_DETAIL = SELECT hbnum_mobileno from hbbt_portal_campdonor_dtl where hbnum_mobileno=? AND gnum_isvalid=1 limit 1

# QUERY 3...
query.SELECT.DONOR_DETAILS = SELECT initcap(hbstr_fname) AS hbstr_fname,hbstr_lname, hbnum_bldgrp_code,hbdt_lastlogin, hbnum_firstlogin, hbnum_demographics, hbnum_usertype,gnum_portal_donor_id,hbnum_eraktkosh, hbstr_mobile_no, hbstr_email_id,NVL(hbstr_image_string,'transactions/assets/no-image.png') AS hbstr_image_string,hbnum_login_attempt,hbnum_login_attempt_date , hbnum_donor_ref_no , hbstr_health_id, hbstr_password,hbnum_healthid_number,(SELECT INITCAP(C.GSTR_STATE_NAME) FROM GBLT_STATE_MST C WHERE C.GNUM_STATE_CODE = hbbt_portal_donor_dtl.gnum_state_code) as edonorStateName,(SELECT distinct(y.gstr_district_name) FROM gblt_district_mst y WHERE y.gnum_district_code=hbbt_portal_donor_dtl.gnum_district_code and gnum_isvalid=1) as edonorDistName,(SELECT nvl(C.gnum_lgd_state_code,0)FROM GBLT_STATE_MST C WHERE C.GNUM_STATE_CODE  =HBBT_PORTAL_DONOR_DTL.GNUM_STATE_CODE AND GNUM_ISVALID = 1) AS lgd_state_code,(SELECT nvl(Y.gnum_lgd_district_code,0)FROM GBLT_DISTRICT_MST Y	WHERE Y.GNUM_DISTRICT_CODE = HBBT_PORTAL_DONOR_DTL.GNUM_DISTRICT_CODE AND GNUM_ISVALID = 1) AS lgd_district_code FROM hbbt_portal_donor_dtl  WHERE hbstr_userid=? and gnum_isvalid=1 and hbnum_registration_mode=0

# QUERY 4...
query.PREV_DONATION_DETAIL_QUERY = SELECT DISTINCT(BAGNO) AS BAGNO, GDT_ENTRY_DATE, USERNAME, FROMPREVDONATIONTABLE, ORGANIZATIONNAME AS ORGANIZATIONNAME, ORGANIZATIONTYPE AS ORGANIZATIONTYPE, STATENAME AS STATENAME, DISTRICTNAME AS DISTRICTNAME, date, BLOODBANK, GNUM_PORTAL_DONOR_ID, STATE, DISTRICT, HBSTR_DONOR_CONTACT_NO, BLOODGROUPNAME AS BLOODGROUPNAME, DONORTYPE FROM ( (SELECT P.GDT_ENTRY_DATE, NVL((HBSTR_FNAME || ' ' || HBSTR_LNAME)::CHARACTER varying,(SELECT HBSTR_FNAME FROM HBBT_DONOR_DTL X,HBBT_DONOR_VISIT_DTL Y WHERE X.HBNUM_DONOR_REGNO = Y.HBNUM_DONOR_REGNO AND X.GNUM_ISVALID = 1 AND Y.GNUM_ISVALID = 1 AND HBSTR_BLDBAG_NO = P.HBNUM_DONATION_ID LIMIT 1)::CHARACTER varying) AS USERNAME, 1 AS FROMPREVDONATIONTABLE, HBSTR_BB_NAME AS ORGANIZATIONNAME, 'NA' AS ORGANIZATIONTYPE, (SELECT GSTR_STATE_NAME FROM GBLT_STATE_MST X WHERE X.GNUM_STATE_CODE = (SELECT GNUM_STATE_CODE FROM GBLT_HOSPITAL_MST D WHERE D.GNUM_HOSPITAL_CODE = P.GNUM_PORTAL_HOSPITAL_CODE AND D.GNUM_ISVALID = 1 ) AND X.GNUM_ISVALID = 1 ) AS STATENAME , (SELECT GSTR_DISTRICT_NAME FROM GBLT_DISTRICT_MST Y WHERE Y.GNUM_DISTRICT_CODE = (SELECT NUM_DIST_ID FROM GBLT_HOSPITAL_MST D WHERE D.GNUM_HOSPITAL_CODE = P.GNUM_PORTAL_HOSPITAL_CODE AND D.GNUM_ISVALID = 1 ) AND Y.GNUM_ISVALID = 1 LIMIT 1) AS DISTRICTNAME, NVL(TO_CHAR(HBDT_DONATION, 'dd-Mon-yy'), '-') AS date, P.HBSTR_BB_NAME AS BLOODBANK, P.GNUM_PORTAL_DONOR_ID:: CHARACTER varying, HBNUM_DONATION_ID AS BAGNO, (SELECT GNUM_STATE_CODE FROM GBLT_HOSPITAL_MST D WHERE D.GNUM_HOSPITAL_CODE = P.GNUM_PORTAL_HOSPITAL_CODE AND D.GNUM_ISVALID = 1 ) AS STATE , (SELECT D.NUM_DIST_ID FROM GBLT_HOSPITAL_MST D WHERE D.GNUM_HOSPITAL_CODE = P.GNUM_PORTAL_HOSPITAL_CODE AND D.GNUM_ISVALID = 1 LIMIT 1) AS DISTRICT, P.HBSTR_DONOR_CONTACT_NO, NVL(( (SELECT HBSTR_INITIALBLD_ABO || '' || DECODE(HBNUM_INITIAL_RH, 1, '+ve', 2, '-ve') FROM HBBT_DONOR_VISIT_DTL Y WHERE HBSTR_BLDBAG_NO = P.HBNUM_DONATION_ID AND GNUM_ISVALID = 1 LIMIT 1)::CHARACTER varying), (SELECT HBSTR_BLDGRP FROM HBBT_BLDGRP_MST X WHERE X.HBNUM_BLDGRP_CODE = A.HBNUM_BLDGRP_CODE )::CHARACTER VARYING) AS BLOODGROUPNAME, 0 AS DONORTYPE FROM HBBT_PORTAL_DONOR_PREVDONATION_DTL P, HBBT_PORTAL_DONOR_DTL A where ( P.GNUM_PORTAL_DONOR_ID = A. gnum_portal_donor_id ) AND A.hbstr_mobile_no=? and P.gnum_isvalid=1 and A.gnum_isvalid=1 and p.HBNUM_DONATION_ID not in (select HBSTR_BLDBAG_NO from hbbt_donor_visit_dtl v, hbbt_donor_dtl d WHERE d.HBNUM_DONOR_REGNO=v.HBNUM_DONOR_REGNO and d.gnum_isvalid=1 and v.gnum_isvalid=1 and d.hbstr_mobile_no=? ) and p.HBNUM_DONATION_ID not in (select d.HBSTR_BLDBAG_NO from HBBT_PORTAL_DONATION_DTL d WHERE d.hbstr_mobile_no=? )) UNION (SELECT B.HBDT_DONOR_VISIT_DATE, A.HBSTR_FNAME || ' ' || A.HBSTR_LNAME AS USERNAME, 0 AS FROMPREVDONATIONTABLE, 'NA' AS ORGANIZATIONNAME, 'NA' AS ORGANIZATIONTYPE, (SELECT GSTR_STATE_NAME FROM GBLT_STATE_MST X WHERE X.GNUM_STATE_CODE = A.GNUM_STATE_CODE AND GNUM_ISVALID = 1) AS STATENAME, (SELECT GSTR_DISTRICT_NAME FROM GBLT_DISTRICT_MST X WHERE X.GNUM_DISTRICT_CODE = A.GNUM_DISTRICT_CODE AND GNUM_ISVALID = 1) DISTRICTNAME, NVL(TO_CHAR(HBDT_DONOR_VISIT_DATE, 'dd-Mon-yy'), '-') AS date, (SELECT GSTR_HOSPITAL_NAME FROM GBLT_HOSPITAL_MST M WHERE M.GNUM_HOSPITAL_CODE = A.GNUM_HOSPITAL_CODE) AS BLOODBANK, '':: CHARACTER varying, HBSTR_BLDBAG_NO AS BAGNO, A.GNUM_STATE_CODE AS STATE, A.GNUM_DISTRICT_CODE AS DISTRICT, A.HBSTR_MOBILE_NO, NVL((HBSTR_INITIALBLD_ABO || '' || DECODE(HBNUM_INITIAL_RH, 1, '+ve', 2, '-ve')), (SELECT HBSTR_BLDGRP FROM HBBT_BLDGRP_MST X WHERE X.HBNUM_BLDGRP_CODE = (SELECT HBNUM_BLDGRP_CODE FROM HBBT_PORTAL_DONOR_DTL WHERE HBSTR_MOBILE_NO = ?))) AS BLOODGROUPNAME, HBNUM_DONOR_TYPE_CODE AS DONORTYPE FROM HBBT_DONOR_VISIT_DTL B, HBBT_DONOR_DTL A WHERE B.HBNUM_DONOR_REGNO = A.HBNUM_DONOR_REGNO AND B.GNUM_HOSPITAL_CODE = A.GNUM_HOSPITAL_CODE AND B.HBNUM_DONATION_STATUS IN (2, 3) AND A.HBSTR_MOBILE_NO = ? AND A.GNUM_ISVALID = 1 AND HBSTR_BLDBAG_NO IS NOT NULL ORDER BY HBDT_DONOR_VISIT_DATE DESC) UNION (SELECT DISTINCT GDT_ENTRY_DATE, HBSTR_FNAME AS USERNAME, 0 AS FROMPREVDONATIONTABLE, (SELECT HBSTR_ORGANISATION_NAME FROM HBBT_CAMP_DETAIL WHERE HBNUM_CAMP_REQ_NO = HBNUM_CAMPID AND GNUM_ISVALID = 1 UNION SELECT HBSTR_CONDUCTED_BY FROM HBBT_PORTAL_CAMP_DETAIL WHERE HBNUM_CAMP_REQ_NO = HBNUM_CAMPID AND GNUM_ISVALID = 1 ) AS ORGANIZATIONNAME, NVL( (SELECT HBNUM_ORGANISATION_TYPE_NEW FROM HBBT_CAMP_DETAIL WHERE HBNUM_CAMP_REQ_NO = B.HBNUM_CAMPID AND GNUM_ISVALID = 1 UNION SELECT HBNUM_ORGANISATION_TYPE FROM HBBT_PORTAL_CAMP_DETAIL WHERE HBNUM_CAMP_REQ_NO = B.HBNUM_CAMPID AND GNUM_ISVALID = 1 )::CHARACTER varying ,'NA')AS ORGANIZATIONTYPE, (SELECT GSTR_STATE_NAME FROM GBLT_STATE_MST WHERE GNUM_STATE_CODE IN (SELECT GNUM_STATE_CODE FROM GBLT_PORTAL_HOSPITAL_MST WHERE (GNUM_HOSPITAL_CODE = B.GNUM_HOSPITAL_CODE OR GNUM_ERAKTKOSH_HOSPITAL_CODE = B.GNUM_HOSPITAL_CODE) ) AND GNUM_ISVALID = 1 ) AS STATENAME, (SELECT GSTR_DISTRICT_NAME FROM GBLT_DISTRICT_MST WHERE GNUM_DISTRICT_CODE IN (SELECT NUM_DIST_ID FROM GBLT_PORTAL_HOSPITAL_MST WHERE (GNUM_HOSPITAL_CODE = B.GNUM_HOSPITAL_CODE OR GNUM_ERAKTKOSH_HOSPITAL_CODE = B.GNUM_HOSPITAL_CODE) ) AND GNUM_ISVALID = 1 ) AS DISTRICTNAME, NVL(TO_CHAR(B.HBDT_DONATION_DATE, 'dd-Mon-yy'), '-') AS DATE, (SELECT GSTR_HOSPITAL_NAME FROM GBLT_PORTAL_HOSPITAL_MST WHERE GNUM_HOSPITAL_CODE = B.GNUM_HOSPITAL_CODE AND GNUM_ISVALID = 1 UNION (SELECT GSTR_HOSPITAL_NAME FROM GBLT_PORTAL_HOSPITAL_MST WHERE GNUM_ERAKTKOSH_HOSPITAL_CODE = B.GNUM_HOSPITAL_CODE AND GNUM_ISVALID = 1 )) AS BLOODBANK, B.GNUM_PORTAL_DONOR_ID :: CHARACTER VARYING ,B.HBSTR_BLDBAG_NO AS BAGNO, (SELECT GNUM_STATE_CODE FROM GBLT_PORTAL_HOSPITAL_MST WHERE (GNUM_HOSPITAL_CODE = B.GNUM_HOSPITAL_CODE OR GNUM_ERAKTKOSH_HOSPITAL_CODE = B.GNUM_HOSPITAL_CODE) AND GNUM_ISVALID = 1 ) AS STATE, B.GNUM_DISTRICT_CODE AS DISTRICT, B.HBSTR_MOBILE_NO, (SELECT HBSTR_BLDGRP FROM HBBT_BLDGRP_MST X WHERE B.HBNUM_BLDGRP_CODE = X.HBNUM_BLDGRP_CODE AND GNUM_ISVALID = 1 LIMIT 1) AS BLOODGROUPNAME, HBNUM_DONOR_TYPE AS DONORTYPE FROM HBBT_PORTAL_DONATION_DTL B WHERE B.HBSTR_MOBILE_NO = ? AND B.HBSTR_BLDBAG_NO IS NOT NULL AND B.GNUM_ISVALID = 1 )) ORDER BY GDT_ENTRY_DATE DESC

# QUERY 5....query.SELECT.DONOR_DETAILS
query.CHECK_USERID_EXIST = SELECT COUNT(*) FROM hbbt_portal_donor_dtl WHERE hbstr_userid = ?

# QUERY 6.... fetch otp count
query.GET_OTP_COUNT = SELECT  COUNT (*) FROM hbbt_daily_mobile_otp_count WHERE hbstr_mobileno = ? AND trunc (msg_date) = trunc(sysdate)

# QUERY 7..... insert otp count
query.INSERT.OTP.COUNT = INSERT INTO hbbt_daily_mobile_otp_count (hbstr_mobileno,msg_date) VALUES (?,sysdate);

# Query 8...  insert otp and mobile number generation message.
query.INSERT_OTP_LOG=INSERT INTO hbbt_eraktkosh_log_details VALUES (1, SYSDATE, 1, (SELECT NVL(MAX(hbnum_serial_no), 0) + 1 FROM hbbt_eraktkosh_log_details WHERE gnum_isvalid = 1), ?)

# QUERY 9...
query.SELECT.OTP.TIME = WITH TimeComparison AS (SELECT TO_CHAR(msg_date, 'HH24:MI:SS') AS time_portion, ROW_NUMBER() OVER (ORDER BY msg_date DESC) AS row_num FROM hbbt_daily_mobile_otp_count WHERE hbstr_mobileno = ? AND TRUNC(msg_date) = TRUNC(SYSDATE) ) SELECT time_portion FROM TimeComparison WHERE row_num = 1

# QUERY 10...
query.UPDATE.DONOR.DETAILS = UPDATE hbbt_portal_donor_dtl SET hbstr_fname=? , hbstr_lname=? , hbdt_dob=TO_DATE(?,'dd-mm-yyyy') , gnum_gender_code=? , hbstr_email_id=? , hbnum_bldgrp_code=? , hbstr_father_name=? , gnum_marital_status_code=? , hbstr_spouse_name=? , gnum_occupation_code=? , gnum_religion_code=? , hbstr_houesno=? , hbstr_addr1=? , hbstr_city_location=? , hbstr_city=? , gnum_district_code=? , gnum_state_code=? , hbnum_pincode=? ,  hbstr_landmark=? WHERE hbstr_userid=? and gnum_isvalid=1

# QUERY 11...
query.SELECT.DONOR_PORTAL_LOGIN_DETAILS = SELECT initcap(hbstr_fname) AS hbstr_fname, hbstr_lname, CASE WHEN hbnum_bldgrp_code = '17' THEN 'AB-pos' WHEN hbnum_bldgrp_code = '18' THEN 'AB-neg'  WHEN hbnum_bldgrp_code = '15' THEN 'O-pos' WHEN hbnum_bldgrp_code = '16' THEN 'O-neg' WHEN hbnum_bldgrp_code = '13' THEN 'B-pos' WHEN hbnum_bldgrp_code = '14' THEN 'B-neg' WHEN hbnum_bldgrp_code = '20' THEN 'A-pos' WHEN hbnum_bldgrp_code = '12' THEN 'A-neg' ELSE NULL END AS hbnum_bldgrp_code, COALESCE(hbdt_lastlogin, CURRENT_DATE) AS hbdt_lastlogin, hbnum_firstlogin, hbnum_demographics, hbnum_usertype, hbstr_mobile_no, gnum_state_code, gnum_district_code, hbnum_pincode, hbstr_email_id, gnum_gender_code, TO_CHAR(hbdt_dob, 'DD-MM-YYYY') AS hbdt_dob, hbstr_addr1, hbstr_father_name, gnum_occupation_code, gnum_religion_code, gnum_marital_status_code, hbstr_spouse_name,  hbstr_city_location, hbstr_city, hbstr_houesno,  hbstr_landmark FROM hbbt_portal_donor_dtl WHERE hbstr_userid = ? AND gnum_isvalid = 1;

# QUERY 12...
query.INSERT.DONOR.DETAILS = insert into hbbt_portal_donor_dtl (hbstr_mobile_no, hbstr_fname, hbstr_lname, hbnum_bldgrp_code, hbstr_password, hbnum_firstlogin, hbnum_demographics, gnum_isvalid, gnum_state_code, gnum_district_code, hbnum_pincode, hbstr_email_id, gnum_gender_code, hbstr_userid, hbstr_addr1, hbnum_allblood, hbnum_repository, hbnum_registration_mode, hbstr_father_name, hbdt_dob, hbdt_reg_date, gdt_entry_date) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_TIMESTAMP(?, 'YYYY-MM-DD HH24:MI:SS'), sysdate, sysdate);
 
# Query for updating donor details....
update.donor.details = UPDATE hbbt_portal_donor_dtl SET hbstr_fname = ?, hbstr_lname = ?, hbnum_bldgrp_code = ?, gnum_isvalid = 1, gnum_state_code = ?, gnum_district_code = ?, hbnum_pincode = ?, hbstr_email_id = ?, gnum_marital_status_code = ?, hbstr_spouse_name = ?, gnum_occupation_code = ?, hbstr_houesno = ?, hbstr_landmark = ?, gnum_gender_code = ?, gnum_religion_code = ?, hbstr_addr1 = ?, hbstr_city_location = ?, hbstr_city = ?, hbstr_father_name = ?, hbdt_dob = TO_TIMESTAMP(?, 'YYYY-MM-DD') WHERE hbstr_mobile_no = ?

# Query 13... fetch all valid states
fetch.states = SELECT GNUM_STATE_CODE, GSTR_STATE_NAME FROM GBLT_STATE_MST WHERE gstr_country_code='IND' AND GNUM_ISVALID=1 ORDER BY GSTR_STATE_NAME

# Query 14.. fetch all districts on the basis of states...
fetch.districts = select gnum_district_code, gstr_district_name from gblt_district_mst where gnum_isvalid=1 and gnum_state_code=? order by gstr_district_name

# Query 15... fetching gender
fetch.gender = select gstr_gender_code, gstr_gender_name from gblt_gender_mst where gnum_isvalid=1 order by gstr_gender_name

# Query 16... fetching occupation
fetch.occupation = select gnum_occupation_code, gstr_occupation_name from gblt_occupation_mst where gnum_isvalid = 1

# Query 17... fetching marital status
fetch.maritalStatus = select gnum_marital_status_code, gstr_marital_status from gblt_marital_status_mst where gnum_isvalid = 1 order by gstr_marital_status

# Query 18 ... fetching religion
fetch.religion = select gnum_religion_code, gstr_religion_name from gblt_religion_mst where gnum_isvalid = 1 

# Query 19 .. fetch blood group
fetch.bloodGroup = SELECT hbnum_bldgrp_code,hbstr_bldgrp FROM HBBT_BLDGRP_MST where gnum_isvalid = 1

# Query 20 ... fetch Component List...
fetch.componentList = SELECT hbnum_bld_component_id, hbstr_component_name, hbstr_short_name FROM hbbt_bld_component_mst WHERE GNUM_ISVALID=1 AND GNUM_HOSPITAL_CODE=? ORDER BY hbstr_component_name

# Query 20 ... fetch Blood Bank List...
# When district is specified
fetch.bloodBank = SELECT gnum_hospital_code, gstr_hospital_name AS hospital_name, NVL(gstr_city, '') AS city, NVL(gnum_login_mobile, 0) AS mobile_no FROM gblt_portal_hospital_mst WHERE gnum_state_code = ? AND num_dist_id = ? AND gnum_isvalid = 1 AND hbnum_isbsu = 0 ORDER BY gstr_hospital_name

# When all districts should be included
fetch.bloodBank.allDistricts = SELECT gnum_hospital_code, gstr_hospital_name AS hospital_name, NVL(gstr_city, '') AS city, NVL(gnum_login_mobile, 0) AS mobile_no FROM gblt_portal_hospital_mst WHERE gnum_state_code = ? AND gnum_isvalid = 1 AND hbnum_isbsu = 0 ORDER BY gstr_hospital_name

# Query 21 ...... fetch blood availability list .......
fetch.blood.availability = (SELECT hbstr_bldgrp_name AS bldgrpcode1, hbnum_component_id AS compId, hbnum_quantity - (SELECT HBNUM_BUFFER_STOCK FROM HBBT_BLDCOM_STOCK_MST WHERE gnum_isvalid = 1 AND HBNUM_BLDGRP_CODE = a.HBNUM_BLD_GRP_id AND HBNUM_BLD_COMPONENT_ID = a.HBNUM_COMPONENT_ID AND GNUM_HOSPITAL_CODE = a.GNUM_HOSPITAL_CODE) AS COUNT, PKG_BLOODBANK_MST.GETBLOODBANKNAME(a.gnum_hospital_code::VARCHAR) AS hospitalname, hbstr_bb_address AS hospitaladd, hbstr_bb_contact AS hospitalcontact, a.gnum_hospital_code AS hospitalCode, (SELECT HBNUM_moderate_stock FROM HBBT_BLDCOM_STOCK_MST WHERE gnum_isvalid = 1 AND HBNUM_BLDGRP_CODE = a.HBNUM_BLD_GRP_id AND HBNUM_BLD_COMPONENT_ID = a.HBNUM_COMPONENT_ID AND GNUM_HOSPITAL_CODE = a.GNUM_HOSPITAL_CODE) AS moderateStock, pkg_bloodbank_mst.getbldbanktype((SELECT gnum_hospital_type FROM gblt_hospital_mst WHERE gnum_hospital_code = a.gnum_hospital_code)::VARCHAR) AS hospitalType, a.gdt_entry_date AS entrydate, '0' AS OFFLINE, DECODE((SELECT hbnum_isbsu FROM gblt_portal_hospital_mst WHERE gnum_is_eraktkosh_enabled = 1 AND hbnum_isbsu = 1 AND gnum_eraktkosh_hospital_code = a.gnum_hospital_code), 1, 'BSU', 'Blood Bank') AS Type FROM hbbt_portal_live_stock_dtl a WHERE gnum_state_code = ? AND num_dist_id = ? AND hbnum_component_id = ? AND hbnum_bld_grp_id = ? AND a.gnum_hospital_code IN (:hospitalCodes) GROUP BY gdt_entry_date, gnum_hospital_code, hbnum_bld_grp_id, hbnum_component_id, a.hbstr_bldgrp_name, a.hbstr_component_name, a.hbnum_quantity, a.hbstr_bb_address, a.hbstr_bb_contact) UNION (SELECT hbstr_bldgrp_name AS bldgrpcode1, hbnum_component_id AS compId, a.hbnum_quantity - NVL((SELECT HBNUM_QUANTITY FROM hbbt_portal_BUFFER_stock_dtl WHERE gnum_hospital_code = a.gnum_hospital_code AND hbnum_bld_grp_id = a.hbnum_bld_grp_id AND hbnum_component_id = a.hbnum_component_id AND gnum_isvalid = 1), 0) AS COUNT, hbstr_bb_name AS hospitalname, PKG_BLOODBANK_MST.getPortalBloodBankAddress(a.gnum_hospital_code::VARCHAR) AS hospitaladd, PKG_BLOODBANK_MST.getPortalBloodBankContact(a.gnum_hospital_code::VARCHAR) AS hospitalcontact, a.gnum_hospital_code AS hospitalCode, '0' AS moderateStock, pkg_bloodbank_mst.getbldbanktype((SELECT gnum_hospital_type FROM gblt_portal_hospital_mst b WHERE b.gnum_hospital_code = a.gnum_hospital_code)::VARCHAR) AS hospitalType, a.gdt_entry_date AS entrydate, '1' AS OFFLINE, DECODE((SELECT hbnum_isbsu FROM gblt_portal_hospital_mst WHERE gnum_hospital_code = a.gnum_hospital_code), 1, 'BSU', 'Blood Bank') AS Type FROM hbbt_portal_stock_dtl a WHERE gnum_isvalid = 1 AND gnum_state_code = ? AND num_dist_id = ? AND a.hbnum_component_id = ? AND a.hbnum_bld_grp_id = ? AND a.gnum_hospital_code IN (:hospitalCodes) GROUP BY a.gdt_entry_date, a.gnum_hospital_code, a.hbnum_bld_grp_id, a.hbnum_component_id, a.hbnum_quantity, bldgrpcode1, compid, a.hbstr_bb_name) ORDER BY OFFLINE ASC, entrydate DESC

# Query 22 ... fetch donation camp details...
fetch.blood_donation_camps = SELECT TO_CHAR(DATE(hbdt_camp_date), 'DD-Mon-YYYY') AS campdate, hbstr_camp_starttime || '-' || hbstr_camp_endtime AS camptime, hbstr_camp_name AS campname, hbstr_venue || ',' || DECODE(NVL(TRIM(a.hbstr_venue_address), '0'), '0', '', a.hbstr_venue_address || ', ') || DECODE(NVL(TRIM(a.gstr_camp_add2), '0'), '0', '', a.gstr_camp_add2 || ', ') || DECODE(NVL(TRIM(a.gstr_city), '0'), '0', '', a.gstr_city || ', ') || (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.num_dist_id) AS campvenue, hbstr_venue_contactno AS contact, INITCAP(hbstr_organisation_name) AS conductedby, pkg_bloodbank_mst.getportalbloodbanknameFromeRaktKosh(gnum_hospital_code::VARCHAR) AS hospName, hbnum_camp_req_no AS camp_reqno, 1 AS type, DECODE(TRUNC(hbdt_camp_date), TRUNC(SYSDATE), 1, hbnum_is_portalregistration) AS is_portalregistration, (SELECT gstr_state_name FROM gblt_state_mst WHERE gnum_state_code = a.gnum_state_code AND gnum_isvalid = 1) AS stateName, (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.num_dist_id) AS distName, hbdt_camp_date AS dateToSort FROM hbbt_camp_detail a WHERE gnum_isvalid = 1 AND hbnum_req_status = 2 AND gnum_state_code = ? AND (num_dist_id = COALESCE(?, num_dist_id, -1) OR ? = -1) AND hbdt_camp_date BETWEEN COALESCE(TO_DATE(?, 'YYYY-MM-DD'), TRUNC(SYSDATE)) AND COALESCE(TO_DATE(?, 'YYYY-MM-DD'), TRUNC(SYSDATE)) UNION SELECT TO_CHAR(DATE(hbdt_camp_date), 'DD-Mon-YYYY') AS campdate, hbstr_camp_starttime || '-' || hbstr_camp_endtime AS camptime, hbstr_camp_name AS campname, hbstr_venue_name || ',' || DECODE(NVL(TRIM(a.hbstr_venue_address1), '0'), '0', '', a.hbstr_venue_address1 || ', ') || DECODE(NVL(TRIM(a.hbstr_venue_address2), '0'), '0', '', a.hbstr_venue_address2 || ', ') || DECODE(NVL(TRIM(a.hbstr_venue_city), '0'), '0', '', a.hbstr_venue_city || ', ') || (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.hbnum_dist_id) AS campvenue, hbstr_venue_contact AS contact, INITCAP(hbstr_organized_by) AS conductedby, pkg_bloodbank_mst.getportalbloodbankname(gnum_portal_hospital_code::VARCHAR) AS hospName, hbnum_camp_req_no AS camp_reqno, 0 AS type, DECODE(TRUNC(hbdt_camp_date), TRUNC(SYSDATE), 1, hbnum_is_portalregistration) AS is_portalregistration, (SELECT gstr_state_name FROM gblt_state_mst WHERE gnum_state_code = a.hbnum_state_code AND gnum_isvalid = 1) AS stateName, (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.hbnum_dist_id) AS distName, hbdt_camp_date AS dateToSort FROM hbbt_portal_camp_detail a WHERE gnum_isvalid = 1 AND hbnum_state_code = ? AND (hbnum_dist_id = COALESCE(?, hbnum_dist_id, -1) OR ? = -1) AND hbdt_camp_date BETWEEN COALESCE(TO_DATE(?, 'YYYY-MM-DD'), TRUNC(SYSDATE)) AND COALESCE(TO_DATE(?, 'YYYY-MM-DD'), TRUNC(SYSDATE)) UNION SELECT TO_CHAR(DATE(hbdt_camp_date), 'DD-Mon-YYYY') AS campdate, hbstr_camp_starttime || '-' || hbstr_camp_endtime AS camptime, hbstr_camp_name AS campname, hbstr_venue_name || ',' || DECODE(NVL(TRIM(a.hbstr_venue_address1), '0'), '0', '', a.hbstr_venue_address1 || ', ') || DECODE(NVL(TRIM(a.hbstr_venue_address2), '0'), '0', '', a.hbstr_venue_address2 || ', ') || DECODE(NVL(TRIM(a.hbstr_venue_city), '0'), '0', '', a.hbstr_venue_city || ', ') || (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.hbnum_dist_id) AS campvenue, hbstr_venue_contact AS contact, INITCAP(hbstr_organized_by) AS conductedby, pkg_bloodbank_mst.getportalbloodbankname(gnum_portal_hospital_code::VARCHAR) AS hospName, hbnum_camp_req_no AS camp_reqno, 0 AS type, hbnum_is_portalregistration AS is_portalregistration, (SELECT gstr_state_name FROM gblt_state_mst WHERE gnum_state_code = a.hbnum_state_code AND gnum_isvalid = 1) AS stateName, (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.hbnum_dist_id) AS distName, hbdt_camp_date AS dateToSort FROM hbbt_portal_camp_detail_service a WHERE gnum_isvalid = 1 AND hbnum_state_code = ? AND (hbnum_dist_id = COALESCE(?, hbnum_dist_id, -1) OR ? = -1) AND hbdt_camp_date BETWEEN COALESCE(TO_DATE(?, 'YYYY-MM-DD'), TRUNC(SYSDATE)) AND COALESCE(TO_DATE(?, 'YYYY-MM-DD'), TRUNC(SYSDATE)) ORDER BY dateToSort ASC;

# QUERY 22 (b) ........ fetch Camp details by hospital code.....
camp.schedule.query = SELECT TO_CHAR(DATE(hbdt_camp_date), 'DD-Mon-YYYY') AS campdate, hbstr_camp_starttime || '-' || hbstr_camp_endtime AS camptime, hbstr_camp_name AS campname, hbstr_venue || ',' || DECODE(NVL(TRIM(a.hbstr_venue_address), '0'), '0', '', a.hbstr_venue_address || ', ') || DECODE(NVL(TRIM(a.gstr_camp_add2), '0'), '0', '', a.gstr_camp_add2 || ', ') || DECODE(NVL(TRIM(a.gstr_city), '0'), '0', '', a.gstr_city || ', ') || (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.num_dist_id) AS campvenue, hbstr_venue_contactno AS contact, INITCAP(hbstr_organisation_name) AS conductedby, pkg_bloodbank_mst.getportalbloodbanknameFromeRaktKosh(gnum_hospital_code::VARCHAR) AS hospName, hbnum_camp_req_no AS camp_reqno, 1 AS type, DECODE(TRUNC(hbdt_camp_date), TRUNC(SYSDATE), 1, hbnum_is_portalregistration) AS is_portalregistration, (SELECT gstr_state_name FROM gblt_state_mst WHERE gnum_state_code = a.gnum_state_code AND gnum_isvalid = 1) AS stateName, (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.num_dist_id) AS distName, hbdt_camp_date AS dateToSort FROM hbbt_camp_detail a WHERE gnum_isvalid = 1 AND hbnum_req_status = 2 AND gnum_hospital_code = ? AND hbdt_camp_date>=SYSDATE UNION SELECT TO_CHAR(DATE(hbdt_camp_date), 'DD-Mon-YYYY') AS campdate, hbstr_camp_starttime || '-' || hbstr_camp_endtime AS camptime, hbstr_camp_name AS campname, hbstr_venue_name || ',' || DECODE(NVL(TRIM(a.hbstr_venue_address1), '0'), '0', '', a.hbstr_venue_address1 || ', ') || DECODE(NVL(TRIM(a.hbstr_venue_address2), '0'), '0', '', a.hbstr_venue_address2 || ', ') || DECODE(NVL(TRIM(a.hbstr_venue_city), '0'), '0', '', a.hbstr_venue_city || ', ') || (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.hbnum_dist_id) AS campvenue, hbstr_venue_contact AS contact, INITCAP(hbstr_organized_by) AS conductedby, pkg_bloodbank_mst.getportalbloodbankname(gnum_portal_hospital_code::VARCHAR) AS hospName, hbnum_camp_req_no AS camp_reqno, 0 AS type, DECODE(TRUNC(hbdt_camp_date), TRUNC(SYSDATE), 1, hbnum_is_portalregistration) AS is_portalregistration, (SELECT gstr_state_name FROM gblt_state_mst WHERE gnum_state_code = a.hbnum_state_code AND gnum_isvalid = 1) AS stateName, (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.hbnum_dist_id) AS distName, hbdt_camp_date AS dateToSort FROM hbbt_portal_camp_detail a WHERE gnum_isvalid = 1 AND gnum_portal_hospital_code = ? AND hbdt_camp_date>=SYSDATE UNION SELECT TO_CHAR(DATE(hbdt_camp_date), 'DD-Mon-YYYY') AS campdate, hbstr_camp_starttime || '-' || hbstr_camp_endtime AS camptime, hbstr_camp_name AS campname, hbstr_venue_name || ',' || DECODE(NVL(TRIM(a.hbstr_venue_address1), '0'), '0', '', a.hbstr_venue_address1 || ', ') || DECODE(NVL(TRIM(a.hbstr_venue_address2), '0'), '0', '', a.hbstr_venue_address2 || ', ') || DECODE(NVL(TRIM(a.hbstr_venue_city), '0'), '0', '', a.hbstr_venue_city || ', ') || (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.hbnum_dist_id) AS campvenue, hbstr_venue_contact AS contact, INITCAP(hbstr_organized_by) AS conductedby, pkg_bloodbank_mst.getportalbloodbankname(gnum_portal_hospital_code::VARCHAR) AS hospName, hbnum_camp_req_no AS camp_reqno, 0 AS type, hbnum_is_portalregistration AS is_portalregistration, (SELECT gstr_state_name FROM gblt_state_mst WHERE gnum_state_code = a.hbnum_state_code AND gnum_isvalid = 1) AS stateName, (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.hbnum_dist_id) AS distName, hbdt_camp_date AS dateToSort FROM hbbt_portal_camp_detail_service a WHERE gnum_isvalid = 1 AND gnum_portal_hospital_code = ? AND hbdt_camp_date>=SYSDATE ORDER BY dateToSort ASC

# Query 23 ... fetch nearest bloodbank...
fetch.nearest_blood_bank = SELECT gstr_hospital_name AS name, decode(nvl(trim(a.gstr_hospital_add1), '0'), '0', '', a.gstr_hospital_add1 || ', ') || decode(nvl(trim(a.gstr_hospital_add2), '0'), '0', '', a.gstr_hospital_add2 || ', ') || decode(nvl(trim(a.gstr_city), '0'), '0', '', a.gstr_city || ', ') || 'Dist. ' || (SELECT gdm.GSTR_DISTRICT_NAME FROM gblt_district_mst gdm WHERE gdm.GNUM_ISVALID = 1 AND gdm.gnum_district_code = a.num_dist_id) AS address, count(*) OVER () AS Count, nvl(trim(a.gstr_phone), '') AS phone, nvl(trim(a.gstr_email), '') AS email, (SELECT facilityname FROM (SELECT HJWD.gnum_hospital_code, string_agg(HJWD.hgstr_facility_name, ',' ORDER BY HJWD.hgstr_facility_name) AS facilityname FROM hgbt_hospital_facility_mst hjwd WHERE gnum_isvalid = 1 AND HJWD.gnum_hospital_code = a.gnum_hospital_code GROUP BY HJWD.gnum_hospital_code) AS facilities) AS facility, pkg_bloodbank_mst.getbldbanktype(gnum_hospital_type::VARCHAR) AS hospitalType, gnum_hospital_code AS hospitalCode, hgnum_latitude, hgnum_longitude, gnum_camp_source, gnum_stock_source, a.num_dist_id AS distId, gnum_state_code AS stateCode, decode(hbnum_isbsu, 1, 'BSU', 'Blood Bank') AS type FROM gblt_portal_hospital_mst a WHERE a.GNUM_ISVALID = 1 AND gnum_state_code = ? AND (a.num_dist_id = ? OR ? = -1) ORDER BY gstr_hospital_name;

# QUERY 24 ... NOTIFICATION DATA ....
fetch.NOTIFICATION_DATA = Select gnum_notification_id as id, hgstr_notification_title as title, hgnum_is_url as isUrl, hgstr_doc_url as docUrl, hgdt_start_date as startDate  from hbbt_portal_notification_dtl where gnum_isvalid = 1 and hgdt_start_date <= CURRENT_DATE and (hgdt_ticker_end_date >= CURRENT_DATE or hgdt_ticker_end_date is null)  and gnum_is_ticker = 1 order by hgdt_start_date desc

# QUERY 25 ... NOTIFICATION POP-UP DATA...
fetch.NOTIFICATION_POPUP = select hgstr_notification_title, hgstr_notification_data, hgdt_start_date as startDate from hbbt_portal_notification_dtl where gnum_notification_id = ? and gnum_isvalid = 1

# QUERY 26 ... Query to check duplicate email
check.duplicate.email=SELECT COUNT(*) FROM hbbt_probable_donor_dtl WHERE hbstr_email_id = ?

# QUERY 27.... Query to get the maximum serial number (to generate unique key)
get.max.serialNo=SELECT COALESCE(MAX(hbnum_srno), 0) FROM hbbt_probable_donor_dtl

# QUERY 28.... Query to insert a new donor record
insert.subscribe.donor=INSERT INTO hbbt_probable_donor_dtl (hbnum_srno, hbnum_state_code, hbnum_district_code, hbnum_unsubscribe_flag, hbnum_mobile_no, hbstr_email_id) VALUES (?, ?, ?, ?, ?, ?)

# QUERY 29.... Query to check subscription of the Donor ...
check.unsubscribe.status=SELECT hbnum_unsubscribe_flag FROM hbbt_probable_donor_dtl WHERE hbnum_srno = ?;

# QUERY 30.... Query to Unsubscribe the Donor ...
update.unsubscribe.flag=UPDATE hbbt_probable_donor_dtl SET hbnum_unsubscribe_flag = ? WHERE hbnum_srno = ?;

# QUERY 31.... Query to fetch subscribed Donor ...
fetch.subscribed.users = SELECT hbstr_email_id FROM hbbt_probable_donor_dtl WHERE hbnum_unsubscribe_flag = 0;

# QUERY 32.... Query to fetch email Donor ...
get.email.by.serialNo = SELECT hbstr_email_id FROM hbbt_probable_donor_dtl WHERE hbnum_srno = ?

# QUERY 33.... Query to fetch email those are unsubscribed Donor ...
check.unsubscribe.flag.by.email = SELECT hbnum_unsubscribe_flag FROM hbbt_probable_donor_dtl WHERE hbstr_email_id = ?

# QUERY 34.... Query to update unsubscribe flag ...
update.resubscribe.flag = UPDATE hbbt_probable_donor_dtl SET hbnum_state_code = ?, hbnum_district_code = ?, hbnum_mobile_no = ?, hbnum_unsubscribe_flag = ? WHERE hbstr_email_id = ?

# QUERY 35.... Query to get serial no...
get.serialNo.by.email = SELECT hbnum_srno FROM hbbt_probable_donor_dtl WHERE hbstr_email_id = ?

# QUERY 36.... Query to update the subscription flag...
update.unsubscribe.flag.by.email=UPDATE hbbt_probable_donor_dtl SET hbnum_unsubscribe_flag = ? WHERE hbstr_email_id = ?

# QUERY 37.... Query to fetch bloodBanks on the basis of state_code and district_code...
get.hospital.byStateDistrict = SELECT gnum_hospital_code, gstr_hospital_name||' '||NVL(gstr_city, ''), NVL(gnum_login_mobile, 0) \ FROM gblt_portal_hospital_mst WHERE gnum_state_code = ? AND num_dist_id = ? \ AND gnum_isvalid = 1 AND hbnum_isbsu = 0 ORDER BY gstr_hospital_name

# QUERY 38 ... QUERY TO FETCH FAQ'S....
get.faq.data = select gstr_faq_question as faqQuestion, gstr_faq_answer as faqAnswer, gstr_faq_title as title, gstr_question_type as quesType from gblt_eraktkosh_faq_mst where gnum_isvalid = 1 AND gstr_faq_question is not null

# QUERY 39 ......  Query for fetching the camp data and used for scheduler.
get.upcoming.camps.query= (SELECT C.HBNUM_STATE_CODE, C.HBNUM_DIST_ID, HBNUM_MOBILE_NO, P.HBSTR_EMAIL_ID, C.HBNUM_CAMP_REQ_NO, C.HBSTR_CAMP_NAME, TO_CHAR(C.HBDT_CAMP_DATE, 'dd-Mon-YYYY') HBDT_CAMP_DATE, C.HBSTR_CAMP_STARTTIME || '-' || HBSTR_CAMP_ENDTIME HBDT_CAMP_TIME, C.GNUM_PORTAL_HOSPITAL_CODE, C.HBSTR_CONDUCTED_BY, C.HBSTR_VENUE_NAME, C.HBSTR_VENUE_ADDRESS1, C.HBSTR_VENUE_CITY, C.HBSTR_VENUE_CONTACT FROM HBBT_PORTAL_CAMP_DETAIL C, HBBT_PROBABLE_DONOR_DTL P WHERE C.HBNUM_STATE_CODE = P.HBNUM_STATE_CODE AND C.HBNUM_DIST_ID = P.HBNUM_DISTRICT_CODE AND P.hbstr_email_id not in (select hbstr_email_id from  hbbt_probable_donor_log_dtl) AND TRUNC(C.HBDT_CAMP_DATE) >= TRUNC(SYSDATE) AND TRUNC(C.HBDT_CAMP_DATE) <= TRUNC(SYSDATE + 2) AND P.HBNUM_UNSUBSCRIBE_FLAG = 0)

# QUERY 40 .. ...  Query to update the response in donor_log table..
update.donor.response.query = UPDATE hbbt_probable_donor_log_dtl SET gnum_is_response = ? WHERE hbstr_email_id = ? AND hbnum_camp_req_no = ?
				
# QUERY 41 ...  
#insert.email.log.entry = INSERT INTO hbbt_probable_donor_log_dtl (hbstr_email_id, hbnum_camp_req_no, hbdt_email_date, gnum_is_response) VALUES (?, ?, sysdate, NULL)

# QUERY 42... Search Log Queries
insert.SEARCH_LOG = INSERT INTO hbbt_eraktkosh_service_search_log (hbstr_service_type, hbstr_search_json, hbnum_ipaddress) VALUES (?, ?, ?)

fetch.SEARCH_LOG_BY_ID = SELECT hbnum_log_id, gdt_entry_date FROM hbbt_eraktkosh_service_search_log WHERE hbnum_log_id = ?

fetch.SEARCH_LOGS_BY_SERVICE = SELECT hbnum_log_id, gdt_entry_date FROM hbbt_eraktkosh_service_search_log WHERE hbstr_service_type = ? ORDER BY gdt_entry_date DESC


# QUERY 43... NOTIFY_ME QUERIES....
CHECK_EXISTING_EMAIL=SELECT * FROM hbbt_bloodsearch_notification_dtl WHERE hbstr_email_id = ?

# Check if record with same email and same params exists
CHECK_SAME_NOTIFICATION_EXISTS=SELECT * FROM hbbt_bloodsearch_notification_dtl WHERE hbstr_email_id = ? AND hbnum_state_code = ? AND hbnum_district_code = ? AND hbnum_blodgrp_code = ? AND hbnum_bld_component_id IS NOT DISTINCT FROM ? AND hbnum_mobile_no IS NOT DISTINCT FROM ? AND hbnum_hosp_code = ?

# Check if such an entry is older than 3 days
CHECK_IF_SAME_ENTRY_IS_OLDER_THAN_3_DAYS=SELECT COUNT(*) FROM hbbt_bloodsearch_notification_dtl WHERE hbstr_email_id = ? AND hbnum_state_code = ? AND hbnum_district_code = ? AND hbnum_blodgrp_code = ? AND hbnum_bld_component_id IS NOT DISTINCT FROM ? AND hbnum_mobile_no IS NOT DISTINCT FROM ? AND hbnum_hosp_code = ? AND gdt_entry_date <= (CURRENT_DATE - INTERVAL '3 days')

# Insert query
INSERT_NOTIFICATION=INSERT INTO hbbt_bloodsearch_notification_dtl ( hbnum_state_code, hbnum_district_code, hbnum_blodgrp_code, hbnum_bld_component_id, hbnum_notify_flag, hbnum_notify_count, hbnum_mobile_no, hbnum_feedback_count, gdt_entry_date, hbstr_email_id, hbnum_hosp_code) VALUES (?, ?, ?, ?, 0, 0, ?, 0, CURRENT_TIMESTAMP, ?, ?)

#fetching data for notify_me box...
fetch.blood.stock.availability.ForNotifyMe = SELECT * FROM ((SELECT hbstr_bldgrp_name AS bldgrpcode1, hbnum_component_id AS compId, hbnum_quantity - ( SELECT HBNUM_BUFFER_STOCK FROM HBBT_BLDCOM_STOCK_MST WHERE gnum_isvalid = 1 AND HBNUM_BLDGRP_CODE = a.HBNUM_BLD_GRP_id AND HBNUM_BLD_COMPONENT_ID = a.HBNUM_COMPONENT_ID AND GNUM_HOSPITAL_CODE = a.GNUM_HOSPITAL_CODE ) AS COUNT, PKG_BLOODBANK_MST.GETBLOODBANKNAME(a.gnum_hospital_code::VARCHAR) AS hospitalname, hbstr_bb_address AS hospitaladd, hbstr_bb_contact AS hospitalcontact, a.gnum_hospital_code AS hospitalCode, ( SELECT HBNUM_moderate_stock FROM HBBT_BLDCOM_STOCK_MST WHERE gnum_isvalid = 1 AND HBNUM_BLDGRP_CODE = a.HBNUM_BLD_GRP_id AND HBNUM_BLD_COMPONENT_ID = a.HBNUM_COMPONENT_ID AND GNUM_HOSPITAL_CODE = a.GNUM_HOSPITAL_CODE) AS moderateStock, pkg_bloodbank_mst.getbldbanktype(( SELECT gnum_hospital_type FROM gblt_hospital_mst WHERE gnum_hospital_code = a.gnum_hospital_code )::VARCHAR) AS hospitalType, a.gdt_entry_date AS entrydate, '0' AS OFFLINE, DECODE(( SELECT hbnum_isbsu FROM gblt_portal_hospital_mst WHERE gnum_is_eraktkosh_enabled = 1 AND hbnum_isbsu = 1 AND gnum_eraktkosh_hospital_code = a.gnum_hospital_code ), 1, 'BSU', 'Blood Bank') AS Type FROM hbbt_portal_live_stock_dtl a WHERE gnum_state_code = ? AND num_dist_id = ? AND hbnum_component_id = ? AND hbnum_bld_grp_id = ? AND a.gnum_hospital_code IN (:hospitalCodes) GROUP BY gdt_entry_date, gnum_hospital_code, hbnum_bld_grp_id, hbnum_component_id, a.hbstr_bldgrp_name, a.hbstr_component_name, a.hbnum_quantity, a.hbstr_bb_address, a.hbstr_bb_contact) UNION (SELECT hbstr_bldgrp_name AS bldgrpcode1,hbnum_component_id AS compId,a.hbnum_quantity - NVL((SELECT HBNUM_QUANTITY FROM hbbt_portal_BUFFER_stock_dtl WHERE gnum_hospital_code = a.gnum_hospital_code AND hbnum_bld_grp_id = a.hbnum_bld_grp_id  AND hbnum_component_id = a.hbnum_component_id AND gnum_isvalid = 1 ), 0) AS COUNT, hbstr_bb_name AS hospitalname, PKG_BLOODBANK_MST.getPortalBloodBankAddress(a.gnum_hospital_code::VARCHAR) AS hospitaladd, PKG_BLOODBANK_MST.getPortalBloodBankContact(a.gnum_hospital_code::VARCHAR) AS hospitalcontact, a.gnum_hospital_code AS hospitalCode, '0' AS moderateStock, pkg_bloodbank_mst.getbldbanktype(( SELECT gnum_hospital_type FROM gblt_portal_hospital_mst b  WHERE b.gnum_hospital_code = a.gnum_hospital_code )::VARCHAR) AS hospitalType, a.gdt_entry_date AS entrydate, '1' AS OFFLINE, DECODE(( SELECT hbnum_isbsu FROM gblt_portal_hospital_mst WHERE gnum_hospital_code = a.gnum_hospital_code ), 1, 'BSU', 'Blood Bank') AS Type FROM hbbt_portal_stock_dtl a WHERE gnum_isvalid = 1 AND gnum_state_code = ? AND num_dist_id = ? AND a.hbnum_component_id = ? AND a.hbnum_bld_grp_id = ? AND a.gnum_hospital_code IN (:hospitalCodes) GROUP BY a.gdt_entry_date, a.gnum_hospital_code, a.hbnum_bld_grp_id, a.hbnum_component_id, a.hbnum_quantity, bldgrpcode1, compid, a.hbstr_bb_name ) ORDER BY OFFLINE ASC, entrydate DESC ) AS stock_data WHERE COUNT > 0 ORDER BY OFFLINE ASC, entrydate DESC

update.notify.flag.to.sent = UPDATE hbbt_bloodsearch_notification_dtl SET hbnum_notify_flag = 1 WHERE hbstr_email_id = ? AND hbnum_state_code = ? AND hbnum_district_code = ? AND hbnum_notify_flag = 0 AND hbnum_hosp_code && ?

fetch.pending.notification.requests=SELECT * FROM hbbt_bloodsearch_notification_dtl WHERE hbnum_notify_flag = 1 AND gdt_entry_date >= CURRENT_DATE - INTERVAL '3 days'


# Queries used in ABHA...
get_lgd_state_code = select Coalesce(gnum_lgd_state_code, 0)::character varying as lgd_state_code from gblt_state_mst where gnum_isvalid = 1 and gnum_state_code = ?;


get_lgd_district_code = select Coalesce(gnum_lgd_district_code, 0)::character varying as lgd_district_code from gblt_district_mst where gnum_isvalid = 1 and gnum_district_code = ?;


get_state_code = select Coalesce(gnum_state_code, 0)::character varying as state_code from gblt_state_mst where gnum_isvalid = 1 and gnum_lgd_state_code = ?;


get_district_code = select Coalesce(gnum_district_code, 0)::character varying as district_code from gblt_district_mst where gnum_isvalid = 1 and gnum_lgd_district_code = ?;

# Queries for Camp Donor Registration...
fetch.donor.details=SELECT hbstr_fname || hbstr_mname || hbstr_lname AS username, gnum_gender_code AS gendercode, TO_CHAR(AGE(SYSDATE, hbdt_dob), 'YY') AS age, hbstr_father_name AS fathername, hbstr_mobile_no AS mobileno, hbstr_email_id AS email, hbstr_addr1 AS address, hbnum_pincode AS pincode, gnum_district_code AS districtcode, gnum_state_code AS statecode FROM HBBT_PORTAL_DONOR_DTL WHERE hbstr_mobile_no = ? AND gnum_isvalid = 1

# Check duplicate donor in camp...
check.camp.donor.exists=SELECT decode(EXISTS(SELECT 1 FROM HBBT_PORTAL_CAMPDONOR_DTL WHERE hbnum_campid=? and hbnum_mobileno=? and gnum_isvalid=1),true,1,0)::character varying FROM dual

# Insert in audit_log table...
insert.campdonor.auditlog=INSERT INTO hbbt_portal_campdonor_dtl_audit_log (SELECT * FROM HBBT_PORTAL_CAMPDONOR_DTL WHERE hbnum_campid=? AND hbnum_mobileno=? AND gnum_isvalid=1)

# delete from camp table...
delete.camp.donor=DELETE FROM HBBT_PORTAL_CAMPDONOR_DTL WHERE hbnum_campid=? AND hbnum_mobileno=? AND gnum_isvalid=1

# check duplicate in portal donor table...
check.portal.donor.exists=SELECT decode(EXISTS(SELECT 1 FROM hbbt_portal_donor_dtl WHERE hbstr_mobile_no=? AND gnum_isvalid=1),true,1,0)::character varying FROM dual

# insert in portal donor table...
insert.portal.donor=INSERT INTO hbbt_portal_donor_dtl (gnum_portal_donor_id, hbstr_userid, hbnum_donor_ref_no, hbstr_fname, gnum_gender_code, hbdt_dob, hbnum_is_actual_dob, hbnum_bldgrp_code, hbstr_mobile_no,  hbnum_source_ref_no, hbnum_source, hbnum_donor_status, hbnum_is_voluntry, hbstr_addr1, gnum_district_code, gnum_state_code, gnum_isvalid, gnum_hospital_code, gstr_ip_add, gnum_seat_id, gdt_entry_date, gdt_lstmod_date, hbnum_healthid_number, hbstr_health_id, hbstr_password, hbstr_email_id, hbnum_pincode, hbstr_father_name) VALUES (?,?,?,?,?,TO_DATE(?,'DD-MM-YYYY'),0,?,?,?,?,null,null,?,?,?,1,(SELECT NVL((SELECT gnum_portal_hospital_code FROM hbbt_portal_camp_detail WHERE hbnum_camp_req_no=? AND gnum_isvalid=1), (SELECT gnum_hospital_code FROM hbbt_camp_detail WHERE hbnum_camp_req_no=? AND gnum_isvalid=1)) FROM dual),null,null,SYSDATE,null,?,?,?,?,?,?)

# get sequence number...
get.donor.seqno=SELECT Pkg_Blood_Bank.CampDonorSeqNo(1::numeric) FROM dual

# insert in camp donor table....
insert.camp.donor=INSERT INTO hbbt_portal_campdonor_dtl (hbstr_father_name,hbstr_age,gnum_empid, hbstr_name, hbstr_dob, hbnum_gender, hbstr_address, hbstr_city, gnum_state_code, gnum_dist_code, hbnum_pincode, hbstr_email, gnum_isvalid, hbnum_campid, hbdt_campdate,hbnum_seqno, hbnum_mobileno, hbnum_campsource,is_bloodbank_register,hbnum_source, hbbt_donor_seqno) VALUES(?,?,?,?,TO_DATE(?,'dd-MM-yyyy'),?,?,?,?,?,?,?,1,?,TO_DATE(?, 'dd-MM-yyyy'),?::numeric,?,?,?,?,?::numeric)

# total Blood Collection Summary by State
query.blood.collection.summary = SELECT (SELECT GSTR_STATE_NAME AS STATENAME FROM GBLT_STATE_MST WHERE GNUM_ISVALID = 1 AND GNUM_STATE_CODE = X.HBNUM_STATE_CODE) AS STATENAME, hbnum_state_code as StateCode, SUM(HBNUM_TOTAL_VOLUNTARY_COLL + HBNUM_TOTAL_REPLACEMENT_COLL + HBNUM_TOTAL_CAMP_COLL) AS TOTAL_COLLECTION FROM HBBT_DASH_TOTAL_BLOOD_COLLECTION_DONOR_TYPE_BLOOD_GRP_WISE X GROUP BY HBNUM_STATE_CODE

# Total Blood Centers
query.total.bloodcentres = SELECT HBNUM_STATE_CODE AS stateCode, SUM(HBNUM_TOTAL_BLOODCENTRES) AS TOTAL_BLOOD_CENTRES FROM HBBT_DASH_ERAKTKOSH_OVERALL_BB_STATS GROUP BY HBNUM_STATE_CODE

# Total Donors Registered
query.donor.registered = SELECT (SELECT GSTR_STATE_NAME AS STATENAME FROM GBLT_STATE_MST WHERE GNUM_ISVALID = 1 AND GNUM_STATE_CODE = X.HBNUM_STATE_CODE) AS STATENAME, hbnum_state_code as stateCode, SUM(HBNUM_DONOR_REGISTERED) AS HBNUMDONORREGISTERED FROM HBBT_DASH_TOTAL_DONOR_REGISTERED X GROUP BY HBNUM_STATE_CODE ORDER BY STATENAME

# Total Camps Organised...
query.camps.organised = SELECT cd.HBNUM_STATE_CODE AS STATE_CODE, (SELECT COUNT(*) FROM HBBT_PORTAL_CAMPREQUEST_DETAIL cr WHERE cr.GNUM_CAMP_STATUS = 2 AND cr.HBNUM_STATE_CODE = cd.HBNUM_STATE_CODE AND cr.GNUM_ISVALID = 1) + (SELECT COUNT(*) FROM HBBT_PORTAL_CAMP_DETAIL c WHERE c.HBNUM_STATE_CODE = cd.HBNUM_STATE_CODE AND c.GNUM_ISVALID = 1) AS TOTAL_COUNT FROM HBBT_PORTAL_CAMP_DETAIL cd WHERE cd.GNUM_ISVALID = 1 GROUP BY cd.HBNUM_STATE_CODE ORDER BY cd.HBNUM_STATE_CODE;

